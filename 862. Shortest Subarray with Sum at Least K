class Solution {
public:
    int shortestSubarray(vector<int>& nums, int k) {
        int n = nums.size(), ans = INT_MAX;
        long long sum = 0;
        deque<pair<long long, int>> dq ; 
        for(int i = 0; i < n; i++) {
            sum += nums[i] ;
            if (sum >= k) ans = min(ans, i + 1);
            while (!dq.empty() && sum - dq.front().first >= k) {
                auto [p, j] = dq.front();
                dq.pop_front();
                ans = min(ans, i - j);
            }
            while (!dq.empty() && dq.back().first > sum) dq.pop_back();
            dq.push_back({sum, i});
        }
        return ans == INT_MAX ? -1 : ans ;
    }
};
