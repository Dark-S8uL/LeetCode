/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map<TreeNode*, int> mp ;
    int solve(TreeNode* node) {
        if(!node) return 0 ;
        if (mp.find(node) != mp.end()) return mp[node];
        int robb = node->val ;
        if(node->left) robb += solve(node->left->left) + solve(node->left->right) ;
        if(node->right) robb += solve(node->right->left) + solve(node->right->right) ;

        int skip = solve(node->left) + solve(node->right) ;

        return mp[node] = max(robb, skip) ;
    }
    int rob(TreeNode* root) {
        return solve(root) ;
    }
};
