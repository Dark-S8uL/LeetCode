class Solution {
public:
    int maxEvents(vector<vector<int>>& events) {
        int n = events.size() ;
        sort(events.begin(), events.end()) ;
        priority_queue<int, vector<int>, greater<>> pq ;
        int d = 0, cnt = 0 ;
        int i = 0 ;
        while(i < n || !pq.empty()) {
            if(pq.empty()) d = events[i][0] ;
            while(i < n && events[i][0] == d) pq.push(events[i++][1]) ;
            while(!pq.empty() && pq.top() < d) pq.pop() ;
            if(!pq.empty()) {
                pq.pop() ;
                cnt++ ;
            }
            d++ ;
        }
        return cnt ;
    }
};
