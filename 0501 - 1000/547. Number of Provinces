class Solution {
public:
    void dfs(int s, vector<vector<int>>& adj, vector<bool>& vis) {
        vis[s] = true ;
        for(int x : adj[s]) {
            if(!vis[x]) dfs(x, adj, vis) ;
        }
    }
    int findCircleNum(vector<vector<int>>& edges) {
        int n = edges.size() ;
        vector<vector<int>> adj(n) ;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                if(i != j && edges[i][j] == 1) {
                    adj[i].push_back(j) ;
                    adj[j].push_back(i) ;
                }
            }
        }
        vector<bool> vis(n, false) ;
        int cnt = 0 ;
        for(int i = 0; i < n; i++) {
            if(!vis[i]) {
                dfs(i, adj, vis) ;
                cnt++ ;
            }
        }
        return cnt ;
    }
};
