class Solution {
public:
    void dfs(int s, vector<vector<int>>& adj, vector<bool>& vis) {
        vis[s] = true ;
        for(int x : adj[s]) {
            if(!vis[x]) dfs(x, adj, vis) ;
        }
    }
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        int n = rooms.size() ;
        vector<vector<int>> adj(n) ;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < rooms[i].size(); j++) {
                adj[i].push_back(rooms[i][j]) ;
            }
        }
        vector<bool> vis(n, false) ;
        dfs(0, adj, vis) ;
        for(int i = 0; i < n; i++) {
            if(!vis[i]) return false ;
        }
        return true ;
    }
};
