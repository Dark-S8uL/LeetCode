class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int n = nums.size() ;
        int l = -1, r = -1 ;
        for(int i = 0; i < n-1; i++) {
            if(nums[i] > nums[i+1]) {
                l = i ;
                break ;
            }
        }
        if(l == -1) return 0 ;
        for(int i = n-1; i > 0; i--) {
            if(nums[i] < nums[i-1]) {
                r = i ;
                break ;
            }
        }
        int maxi = *max_element(nums.begin() + l, nums.begin() + r + 1) ;
        int mini = *min_element(nums.begin() + l, nums.begin() + r + 1) ;
        l = upper_bound(nums.begin(), nums.begin()+l, mini) - nums.begin() ;
        r = lower_bound(nums.begin() + r + 1, nums.end(), maxi) - nums.begin() ;
        return r-l ;
    }
};
