class Solution {
public:
    vector<bool> isArraySpecial(vector<int>& nums, vector<vector<int>>& queries) {
        int n = nums.size();
        vector<int> prefix(n, 0); 
        for (int i = 0; i < n-1; ++i) {
            if ((nums[i] % 2) != (nums[i+1] % 2)) prefix[i+1] = 1;
            prefix[i+1] += prefix[i];
        }
        vector<bool> v;
        for (const auto& q : queries) {
            int from = q[0], to = q[1];
            int cnt = prefix[to] - prefix[from];
            if (cnt == (to - from)) v.push_back(true);
            else v.push_back(false);
        }
        return v;
    }
};
