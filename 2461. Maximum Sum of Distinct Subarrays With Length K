class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        int n = nums.size() ;
        long long sum = 0, maxi = 0 ;
        unordered_map<int, int> mp ;
        for(int i = 0; i < n; i++) {
            mp[nums[i]]++ ;
            sum += nums[i] ;
            if (i >= k) {
                mp[nums[i - k]]-- ;
                sum -= nums[i - k] ;
                if (mp[nums[i - k]] == 0) mp.erase(nums[i - k]) ;
            }
            if (i >= k - 1 && mp.size() == k) maxi = max(maxi, sum) ;
        }
        return maxi ;
    }
};
