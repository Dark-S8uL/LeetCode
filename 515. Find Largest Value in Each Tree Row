/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> v ;
        if(!root) return v ;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()) {
            int n = q.size() ;
            vector<int> a ;
            while(n--){
                TreeNode* node = q.front();
                q.pop();
                a.push_back(node->val);
                if (node->left) q.push(node->left);
                if (node->right) q.push(node->right);
            }
            int m = *max_element(a.begin(), a.end()) ;
            v.push_back(m) ; 
        }
        return v ;
    }
};
