/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*, unsigned long long>> q ;
        q.push({root, 0}) ;
        unsigned long long maxi = 0 ;
        while(!q.empty()) {
            int n = q.size() ;
            unsigned long long l = q.front().second, r = q.back().second ;
            maxi = max(maxi, r-l+1) ;
            for(int i = 0; i < n; i++) {
                auto pair = q.front() ;
                q.pop() ;
                if(pair.first->left) q.push({pair.first->left, 2 * pair.second + 1}) ;
                if(pair.first->right) q.push({pair.first->right, 2 * pair.second + 2}) ;
            }
        }
        return maxi ;
    }
};
