/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(!head || left == right) return head; 
        ListNode dummy(0, head);
        ListNode *prev = &dummy, *curr = head;
        for(int i = 1; i < left; i++) {
            prev = curr;
            curr = curr->next;
        }
        ListNode *lastUnrev = prev, *tail = curr, *next = nullptr;
        for (int i = left; i <= right; i++) {
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        lastUnrev->next->next = curr;
        lastUnrev->next = prev;  
        return dummy.next;
    }
};
