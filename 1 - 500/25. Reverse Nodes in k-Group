/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode *curr = head;
        int cnt = 0;
        while (curr && cnt < k) {
            curr = curr->next;
            cnt++;
        }
        if (cnt == k) {
            ListNode *prev = nullptr, *next = nullptr;
            curr = head;
            int i = k ;
            while(i--) {
                next = curr->next;
                curr->next = prev;
                prev = curr;
                curr = next;
            }
            head->next = reverseKGroup(curr, k);
            return prev;
        }
        return head;
    }
};
