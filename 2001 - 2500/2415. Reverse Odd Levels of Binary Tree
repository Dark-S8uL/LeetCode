/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        bool flip = 0;
        while(!q.empty()){
            int n = q.size();
            vector<TreeNode*> v(n);
            for(int i = 0; i < n; i++){
                auto node = q.front();
                q.pop();
                if(node->left) q.push(node->left);
                if(node->right) q.push(node->right);
                if(flip){
                    v[i] = node;
                    if(i >= n/2) swap(v[i]->val, v[n-1-i]->val); 
                }
            }
            flip = !flip;
        }
        return root;
    }
};
