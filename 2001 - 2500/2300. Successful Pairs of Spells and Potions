class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        int m = potions.size(), n = spells.size() ;
        sort(potions.begin(), potions.end()) ;
        vector<int> v(n, 0) ;
        for(int i = 0; i < n; i++) {
            long long sp = spells[i] ;
            if(sp == 0) {
                v[i] = (success == 0 ? m : 0) ;
                continue ;
            }
            long long need = (success + sp - 1) / sp ;
            auto it = lower_bound(potions.begin(), potions.end(), need) ;
            v[i] = m - static_cast<int>(it - potions.begin()) ;
        }
        return v ;
    }
};
