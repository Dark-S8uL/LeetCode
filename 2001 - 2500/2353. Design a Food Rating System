class FoodRatings {
public:
    unordered_map<string, vector<pair<int, string>>> mp ;
    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {
        int n = foods.size() ;
        for(int i = 0; i < n; i++) {
            mp[cuisines[i]].push_back({ratings[i], foods[i]}) ;
        }
    }
    
    void changeRating(string food, int newRating) {
        for(auto& pair : mp) {
            bool f = false ;
            for(auto& p : pair.second) {
                if(p.second == food) {
                    p.first = newRating ;
                    f = true ;
                    break ;
                }
            }
            if(f) break ;
        }
    }
    
    string highestRated(string cuisine) {
        string food = "" ;
        int r = 0 ;
        for(auto& p : mp[cuisine]) {
            if(p.first > r) {
                r = p.first ;
                food = p.second ;
            } else if(p.first == r) {
                if(p.second < food) food = p.second ;
            }
        }
        return food ;
    }
};

/**
 * Your FoodRatings object will be instantiated and called as such:
 * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);
 * obj->changeRating(food,newRating);
 * string param_2 = obj->highestRated(cuisine);
 */
