# Approach 1 :

class Solution {
public:
    void solve(int idx, vector<int>& nums, vector<vector<int>>& v) {
        if (idx == nums.size()) {
            v.push_back(nums) ;
            return ;
        }
        for (int i = idx; i < nums.size(); i++) {
            swap(nums[idx], nums[i]) ;
            solve(idx + 1, nums, v) ;
            swap(nums[idx], nums[i]) ;
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> v ;
        solve(0, nums, v) ;
        return v ;
    }
};

---------------------------------------------------------------------------------------------
# Approach 2 :

class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> v ;
        sort(nums.begin(), nums.end()) ; 
        do {
            v.push_back(nums) ; 
        } while(next_permutation(nums.begin(), nums.end())) ;
        return v ;
    }
};
