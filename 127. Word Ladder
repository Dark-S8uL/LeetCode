class Solution {
public:
    int ladderLength(string s, string e, vector<string>& words) {
        int n = s.length() ;
        int len = 0 ;
        unordered_set<string> st(words.begin(), words.end()) ;
        queue<string> q ;
        q.push(s) ;
        while(!q.empty()) {
            len++ ;
            int m = q.size() ;
            for(int i = 0; i < m; i++) {
                string p = q.front() ; q.pop() ;
                for(int j = 0; j < n; j++) {
                    char org = p[j] ;
                    for(char c = 'a'; c <= 'z'; c++) {
                        p[j] = c ;
                        if(st.find(p) == st.end()) continue ;
                        if(p == e) return len + 1 ;
                        st.erase(p) ;
                        q.push(p) ;
                    }
                    p[j] = org ;
                }
            }
        }
        return 0 ;
    }
};
