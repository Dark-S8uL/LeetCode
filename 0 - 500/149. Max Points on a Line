class Solution {
public:
    int maxPoints(vector<vector<int>>& points) {
        int n = points.size();
        if (n <= 2) return n;
        int maxp = 2;
        for (int i = 0; i < n; i++) {
            int dup = 0 ;  
            int l = 1 ;
            for (int j = i+1; j < n; j++) {
                int dx = points[j][0] - points[i][0] ;
                int dy = points[j][1] - points[i][1] ;
                if (dx == 0 && dy == 0) dup++;
                else {
                    int cnt = 2 ;
                    for (int k = j+1; k < n; k++) {
                        int x = points[k][0] - points[i][0] ;
                        int y = points[k][1] - points[i][1] ;
                        int cp = (dy * x) - (dx * y) ;
                        if (cp == 0) cnt++ ;
                    }
                    l = max(l, cnt) ;
                }
            }
            maxp = max(maxp, l + dup) ;
        }
        return maxp;
    }
};
