class Solution {
public:
    long long maximumProduct(vector<int>& nums, int m) {
        int n = nums.size() ;
        vector<int> mini(n), maxi(n) ;
        mini[n-1] = maxi[n-1] = nums[n-1] ;
        for(int i = n-2; i >= 0; i--) {
            mini[i] = min(nums[i], mini[i+1]) ;
            maxi[i] = max(nums[i], maxi[i+1]) ;
        }
        long long maxP = LLONG_MIN ;
        for(int i = 0; i <= n-m; i++) {
            int j = i+m-1 ;
            long long p ;
            if(nums[i] < 0) p = 1LL * nums[i] * mini[j] ;
            else p = 1LL * nums[i] * maxi[j] ;
            maxP = max(maxP, p) ;
        }
        return maxP ;
    }
};
