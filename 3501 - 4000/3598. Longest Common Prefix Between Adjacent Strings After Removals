class Solution {
public:
    vector<int> longestCommonPrefix(vector<string>& words) {
        int n = words.size() ;
        if(n == 1) return {0} ;
        else if(n == 2) return {0, 0} ;
        vector<int> p(n-1) ;
        for(int i = 0; i < n-1; i++) {
            int j = 0 ;
            string r = words[i], s = words[i+1] ;
            while(j < r.length() && j < s.length() && r[j] == s[j]) j++ ;
            p[i] = j ;
        }
        vector<int> pref(n), suff(n) ;
        pref[0] = 0 ;
        for(int i = 1; i < n; i++) pref[i] = max(pref[i-1], p[i-1]) ;
        suff[n-1] = 0 ;
        for(int i = n-2; i >= 0; i--) suff[i] = max(suff[i+1], p[i]) ;
        vector<int> v(n, 0) ;
        for(int i = 0; i < n; i++) {
            int maxi = 0 ;
            if(i == n-1) maxi = max(maxi, pref[i-1]) ;
            if(i == 0) maxi = max(maxi, suff[i+1]) ;
            if(i > 0 && i < n-1) {
                int j = 0 ;
                string r = words[i-1], s = words[i+1] ;
                while(j < r.length() && j < s.length() && r[j] == s[j]) j++ ;
                maxi = max({maxi, j, pref[i-1], suff[i+1]}) ;
            }
            v[i] = maxi ;
        }

        return v ;
    }
};
