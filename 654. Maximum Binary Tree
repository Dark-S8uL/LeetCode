/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(int i, int j, vector<int>& nums) {
        if(i > j) return NULL ;
        int idx = max_element(nums.begin()+i, nums.begin()+j+1) - nums.begin() ;
        int val = *max_element(nums.begin()+i, nums.begin()+j+1) ;
        TreeNode* root = new TreeNode(val) ;
        root->left = solve(i, idx-1, nums) ;
        root->right = solve(idx+1, j, nums) ;
        return root ;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        int n = nums.size() ;
        return solve(0, n-1, nums) ;
    }
};
