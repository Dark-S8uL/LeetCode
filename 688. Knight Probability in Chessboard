class Solution {
public:
    int dr[8] = {-2, -1, 1, 2, 2, 1, -1, -2} ;
    int dc[8] = {1, 2, 2, 1, -1, -2, -2, -1} ;
    double solve(int i, int j, int n, int k, vector<vector<vector<double>>>& t) {
        if(i < 0 || i >= n || j < 0 || j >= n) return 0.0 ;
        if(k == 0) return 1.0 ;
        if(t[i][j][k] != -1) return t[i][j][k] ;
        double ans = 0.0 ;
        for (int d = 0; d < 8; d++) {
            int x = i + dr[d], y = j + dc[d] ;
            ans += solve(x, y, n, k-1, t) / 8.0;
        }
        return t[i][j][k] = ans ;
    }
    double knightProbability(int n, int k, int r, int c) {
        if(k == 0) return 1.0 ;
        vector<vector<vector<double>>> t(n+1, vector<vector<double>>(n+1, vector<double>(k+1, -1.0))) ;
        return solve(r, c, n, k, t) ;
    }
};
